{"version":3,"sources":["CardStack.tsx"],"names":["EPSILON","FALLBACK_DESCRIPTOR","Object","freeze","options","getHeaderHeights","routes","insets","descriptors","layout","previous","reduce","acc","curr","key","style","StyleSheet","flatten","headerStyle","height","safeAreaInsets","headerStatusBarHeight","top","getDistanceFromOptions","mode","descriptor","gestureDirection","ModalTransition","DefaultTransition","getProgressFromGesture","gesture","distance","width","Math","max","interpolate","inputRange","outputRange","CardStack","React","Component","getDerivedStateFromProps","props","state","gestures","animationEnabled","Animated","Value","openingRouteKeys","includes","scenes","map","route","index","self","previousRoute","nextRoute","oldScene","currentGesture","previousGesture","undefined","nextGesture","nextDescriptor","previousDescriptor","scene","progress","current","next","__memo","every","it","i","headerHeights","constructor","e","nativeEvent","setState","previousHeight","headerMode","slice","some","headerTransparent","headerShown","Dimensions","get","render","closingRouteKeys","onOpenRoute","onCloseRoute","getPreviousRoute","getGesturesEnabled","renderHeader","renderScene","onTransitionStart","onTransitionEnd","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","focusedRoute","focusedDescriptor","focusedOptions","isFloatHeaderAbsolute","doesFloatHeaderNeedAbsolutePositioning","defaultTransitionPreset","headerStyleInterpolator","forNoAnimationHeader","right","bottom","left","isScreensEnabled","Platform","OS","floatingHeader","getFocusedRoute","onContentHeightChange","handleHeaderLayout","styleInterpolator","styles","floating","container","handleLayout","focused","isScreenActive","extrapolate","cardShadowEnabled","cardOverlayEnabled","cardOverlay","cardStyle","gestureResponseDistance","gestureVelocityImpact","transitionSpec","cardStyleInterpolator","forNoAnimationCard","transitionConfig","length","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","previousScene","j","s","absoluteFill","create","flex","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n} from 'react-native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\nimport { NavigationState as StackNavigationState } from 'react-navigation';\n\nimport { MaybeScreenContainer, MaybeScreen } from '../Screens';\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport CardContainer from './CardContainer';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport {\n  Route,\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackDescriptor,\n} from '../../types';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  mode: StackCardMode;\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 0.01;\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const style: any = StyleSheet.flatten(options.headerStyle || {});\n\n    const height =\n      typeof style.height === 'number' ? style.height : previous[curr.key];\n\n    const safeAreaInsets = {\n      ...insets,\n      ...options.safeAreaInsets,\n    };\n\n    const { headerStatusBarHeight = safeAreaInsets.top } = options;\n\n    acc[curr.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  mode: StackCardMode,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    gestureDirection = mode === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = descriptor?.options || {};\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  mode: StackCardMode,\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(\n    mode,\n    {\n      // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n      // This causes blank screen on web if it was previously inside container with display: none\n      width: Math.max(1, layout.width),\n      height: Math.max(1, layout.height),\n    },\n    descriptor\n  );\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(props.mode, state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          props.descriptors[route.key] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          props.descriptors[nextRoute?.key] ||\n          state.descriptors[nextRoute?.key];\n\n        const previousDescriptor =\n          props.descriptors[previousRoute?.key] ||\n          state.descriptors[previousRoute?.key];\n\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(\n              props.mode,\n              currentGesture,\n              state.layout,\n              descriptor\n            ),\n            next: nextGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor\n                )\n              : undefined,\n          },\n          __memo: [\n            route,\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-ignore\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: { height, width },\n      descriptors: this.props.descriptors,\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      headerHeights: {},\n    };\n  }\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          props.routes,\n          props.insets,\n          state.descriptors,\n          layout,\n          state.headerHeights\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  private getFocusedRoute = () => {\n    const { state } = this.props;\n\n    return state.routes[state.index];\n  };\n\n  private doesFloatHeaderNeedAbsolutePositioning = () => {\n    if (this.props.headerMode !== 'float') {\n      return false;\n    }\n\n    return this.state.scenes.slice(-2).some((scene) => {\n      const { descriptor } = scene;\n      const options = descriptor ? descriptor.options : {};\n      const { headerTransparent, headerShown } = options;\n\n      if (headerTransparent || headerShown === false) {\n        return true;\n      }\n\n      return false;\n    });\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getPreviousRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    const isFloatHeaderAbsolute = this.doesFloatHeaderNeedAbsolutePositioning();\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimationHeader,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    // Screens is buggy on iOS and web, so we only enable it on Android\n    // For modals, usually we want the screen underneath to be visible, so also disable it there\n    const isScreensEnabled = Platform.OS !== 'ios' && mode !== 'modal';\n\n    let floatingHeader;\n\n    if (headerMode === 'float') {\n      floatingHeader = (\n        <React.Fragment key=\"header\">\n          {renderHeader({\n            mode: 'float',\n            layout,\n            insets: { top, right, bottom, left },\n            scenes,\n            getPreviousRoute,\n            getFocusedRoute: this.getFocusedRoute,\n            onContentHeightChange: this.handleHeaderLayout,\n            gestureDirection:\n              focusedOptions.gestureDirection !== undefined\n                ? focusedOptions.gestureDirection\n                : defaultTransitionPreset.gestureDirection,\n            styleInterpolator:\n              focusedOptions.headerStyleInterpolator !== undefined\n                ? focusedOptions.headerStyleInterpolator\n                : defaultTransitionPreset.headerStyleInterpolator,\n            style: isFloatHeaderAbsolute ? styles.floating : undefined,\n          })}\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {isFloatHeaderAbsolute ? null : floatingHeader}\n        <MaybeScreenContainer\n          enabled={isScreensEnabled}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n\n            const isScreenActive = scene.progress.next\n              ? scene.progress.next.interpolate({\n                  inputRange: [0, 1 - EPSILON, 1],\n                  outputRange: [1, 1, 0],\n                  extrapolate: 'clamp',\n                })\n              : 1;\n\n            const {\n              safeAreaInsets,\n              headerShown,\n              headerTransparent,\n              cardShadowEnabled,\n              cardOverlayEnabled,\n              cardOverlay,\n              cardStyle,\n              animationEnabled,\n              gestureResponseDistance,\n              gestureVelocityImpact,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = animationEnabled === false\n                ? forNoAnimationCard\n                : defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n            } = scene.descriptor\n              ? scene.descriptor.options\n              : ({} as StackNavigationOptions);\n\n            let transitionConfig = {\n              gestureDirection,\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator,\n            };\n\n            // When a screen is not the last, it should use next screen's transition config\n            // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n            // For example combining a slide and a modal transition would look wrong otherwise\n            // With this approach, combining different transition styles in the same navigator mostly looks right\n            // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n            // but majority of the transitions look alright\n            if (index !== self.length - 1) {\n              const nextScene = scenes[index + 1];\n\n              if (nextScene) {\n                const {\n                  animationEnabled,\n                  gestureDirection = defaultTransitionPreset.gestureDirection,\n                  transitionSpec = defaultTransitionPreset.transitionSpec,\n                  cardStyleInterpolator = animationEnabled === false\n                    ? forNoAnimationCard\n                    : defaultTransitionPreset.cardStyleInterpolator,\n                  headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                } = nextScene.descriptor\n                  ? nextScene.descriptor.options\n                  : ({} as StackNavigationOptions);\n\n                transitionConfig = {\n                  gestureDirection,\n                  transitionSpec,\n                  cardStyleInterpolator,\n                  headerStyleInterpolator,\n                };\n              }\n            }\n\n            const {\n              top: safeAreaInsetTop = insets.top,\n              right: safeAreaInsetRight = insets.right,\n              bottom: safeAreaInsetBottom = insets.bottom,\n              left: safeAreaInsetLeft = insets.left,\n            } = safeAreaInsets || {};\n\n            const previousRoute = getPreviousRoute({ route: scene.route });\n\n            let previousScene = scenes[index - 1];\n\n            if (previousRoute) {\n              // The previous scene will be shortly before the current scene in the array\n              // So loop back from current index to avoid looping over the full array\n              for (let j = index - 1; j >= 0; j--) {\n                const s = scenes[j];\n\n                if (s && s.route.key === previousRoute.key) {\n                  previousScene = s;\n                  break;\n                }\n              }\n            }\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={isScreensEnabled}\n                active={isScreenActive}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  previousScene={previousScene}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  cardOverlay={cardOverlay}\n                  cardOverlayEnabled={cardOverlayEnabled}\n                  cardShadowEnabled={cardShadowEnabled}\n                  cardStyle={cardStyle}\n                  onPageChangeStart={onPageChangeStart}\n                  onPageChangeConfirm={onPageChangeConfirm}\n                  onPageChangeCancel={onPageChangeCancel}\n                  gestureResponseDistance={gestureResponseDistance}\n                  headerHeight={headerHeights[route.key]}\n                  onHeaderHeightChange={this.handleHeaderLayout}\n                  getPreviousRoute={getPreviousRoute}\n                  getFocusedRoute={this.getFocusedRoute}\n                  mode={mode}\n                  headerMode={headerMode}\n                  hasAbsoluteHeader={\n                    isFloatHeaderAbsolute &&\n                    headerShown !== false &&\n                    !headerTransparent\n                  }\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  gestureEnabled={index !== 0 && getGesturesEnabled({ route })}\n                  gestureVelocityImpact={gestureVelocityImpact}\n                  {...transitionConfig}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {isFloatHeaderAbsolute ? floatingHeader : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  floating: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]}